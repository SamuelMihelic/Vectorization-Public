%% vectorization_script_MGB
% Testing the SLAVV software on the 2PM stack for David Miller from the Sakadzic Lab at Mass General Brigham 
% SAM 10/12/22

input_names{ 1 } = 'block_0.tif' ; OutputDirectory = 'E:\Anna\' ;

microns_per_voxel = [1.1011, 1.1011, 1.1011]; % [ y, x, z ] == microns_per_voxel

number_of_stacks = length( input_names );

stackID_range = 1 : number_of_stacks ;        

%% Workflow:

% start_workflow = 'energy' ;
% start_workflow = 'vertices' ;
% start_workflow = 'edges' ;
% start_workflow = 'network' ;
start_workflow = 'none' ;

%% Settings:

% PSF_fudge_factor = 2 ;
PSF_fudge_factor = 1 ;

% % volume octaves (doubling of spherical volume)

% scales_per_octave = 1 / 3 ; % 1 per radius octave
% scales_per_octave = 2 / 3 ; % 2 per radius octave
scales_per_octave = 1 ; % 3 per radius octave

for stackID = stackID_range
    
    switch start_workflow
    
        case 'energy'

            fix_intensity_bands([ OutputDirectory, input_names{ stackID }])
    
            name_value_pair_inputs = {  'OutputDirectory',                   OutputDirectory, ...
                                        'PreviousBatch',                    'none',               ...
                                        'PreviousWorkflow',                 'none',            ...
                                        'StartWorkflow',                    'energy',                           ...
                                       'FinalWorkflow',                    'network',                              ...
                                   ...     'FinalWorkflow',                    'energy',                              ...                    
                                        'Visual',                           'productive',                       ...
                                        'SpecialOutput', { 'histograms', 'vmv', 'depth', 'strands', 'directions' },        ...                                        
                                        'NewBatch',                         'yes',                    ...
                                        'Presumptive',                       true,                              ...
                                        'gaussian_to_ideal_ratio',               ( 1 - 2 ^ - ( 2 / scales_per_octave / 3 )) .^ 0.5 ,         ... % pythagorean half (root(2)/2) of the radius is due to blurring when the radius is sampled twice each doubling
        ...                                'gaussian_to_ideal_ratio',               1,         ... % pythagorean half (root(2)/2) of the radius is due to blurring when the radius is sampled twice each doubling
                                     'spherical_to_annular_ratio',               1, ...
                                        'microns_per_voxel',                        microns_per_voxel( stackID, : ),          ... 
                               ...        'radius_of_smallest_vessel_in_microns',      7,                         ...
                                       'radius_of_smallest_vessel_in_microns',      2.2022,                         ...                                       
                                        'radius_of_largest_vessel_in_microns',      30,                         ...
                                        'approximating_PSF',                        true,                       ...
                                        'excitation_wavelength',                    1.3 * PSF_fudge_factor,     ...
                                        'scales_per_octave',                        scales_per_octave,                        ... 
                                        'max_voxels_per_node_energy',               1e6                          };

            time_stamp = vectorize_V200([ OutputDirectory, input_names{ stackID }], name_value_pair_inputs{ 1, : }); 

        
        otherwise

            name_value_pair_inputs = {  'OutputDirectory',                   OutputDirectory,  ...
                         ...               'PreviousBatch',                    'recent',   ...
                         ...               'PreviousWorkflow',                 'recent',          ...
                                        'StartWorkflow',                    start_workflow,    ...
                                   ...     'FinalWorkflow',                    'network',         ...
                                        'NewBatch',                         'no',              ...
                                        'Presumptive',                       true,             ...
                         ...               'VertexCuration',                   'manual',          ...
                                        'VertexCuration',                   'machine-manual', ...
                      ...                  'VertexCuration',                           'manual', ...
                                        'sigma_edge_smoothing',             0.5,               ...
                       ...                 'EdgeCuration',                     'manual', ...
    ...                                    'SpecialOutput', { 'depth', 'strands', 'directions', 'upsampled', '3D-strands' }};
    ...                                    'SpecialOutput', { '3D-strands' }};
...                                        'SpecialOutput', { 'depth-stats' }};
   ...                                      'SpecialOutput', { 'depth', 'directions' }};
        ...                                 'SpecialOutput', { 'depth-stats' }};
          ...                              'SpecialOutput', {'histograms'}};
                                        'SpecialOutput', {'casx'}};
...                                          'SpecialOutput', { 'vmv', '3D-z-directions', '3D-radii', '3D-strands' }};
                       ...                   'SpecialOutput', { 'directions', 'strands' }};
      ...                                      'SpecialOutput', {'histograms', 'vmv', '3D-z-directions', '3D-radii', '3D-strands', 'directions', 'strands' }};

            time_stamp = vectorize_V200( name_value_pair_inputs{ 1, : }); 
    end            
end
