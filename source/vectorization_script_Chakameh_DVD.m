%% Chakameh vectorization for efforts on detecting descending vessels
% 4/11/2023 SAM

%% input files
% input_names{ 1 } =         '201211_b.tif' ; OutputDirectory = 'E:\Chakameh\descending vessel detection\' ;
% % input_names{ 2 } = 'blurred_201211_b.tif' ;
% 
% % input_names{ 1 } = 'blurred_201211_b.tif' ; OutputDirectory = 'E:\Chakameh\descending vessel detection\' ;

% input_names{ 1 } = 'Doug_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Doug week 1\' ; 
% input_names{ 1 } = 'Elmer_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Elmer week 1\' ; 
% input_names{ 1 } = 'Eddy_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Eddy week 1\' ; 
% input_names{ 1 } = 'Dan_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Dan week 1\fused\' ;
% input_names{ 1 } = 'Dudley_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Dudley week 1\' ;
% input_names{ 1 } = 'Bernie_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Bernie week 1\' ;

% input_names{ 1 } = 'Brett_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Brett week 1\truncated\' ;
% input_names{ 1 } = 'Dwight_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Dwight week 1\' ;
input_names{ 1 } = 'Ant_Fused_Raw_w1.tif' ; OutputDirectory = 'E:\2P imaging\2021_Chronic_Imaging\Ant week 1\' ;

%% blurring input
% mat2tif(gaussian_blur(tif2mat([OutputDirectory,input_names{ 1 }]),[2,2,125]./microns_per_voxel),[OutputDirectory,input_names{ 2 }])


%% params
microns_per_voxel = [ ];

% microns_per_voxel( 1, 1 : 3 ) = [1.34, 1.36, 3]; % [ y, x, z ] == microns_per_voxel
% microns_per_voxel( 1, 1 : 3 ) = [1.34, 1.36, 3 / 125 * 3]; % [ y, x, z ] == microns_per_voxel % 125 microns averaged
% microns_per_voxel( 1, 1 : 3 ) = [1.34, 1.36, 3 / 75 * 3]; % [ y, x, z ] == microns_per_voxel % 75 microns averaged
% microns_per_voxel( 1, 1 : 3 ) = [1.34, 1.36, 3 / 50 * 3]; % [ y, x, z ] == microns_per_voxel % 50 microns averaged
microns_per_voxel( 1, 1 : 3 ) = [1.34, 1.36, 3 / 25 * 3]; % [ y, x, z ] == microns_per_voxel % 25 microns averaged


number_of_stacks = length( input_names );

stackID_range = 1 : number_of_stacks ;        

%% Workflow:

start_workflow = 'energy' ;
% start_workflow = 'vertices' ;
% start_workflow = 'edges' ;
% start_workflow = 'network' ;
% start_workflow = 'none' ;


% final_workflow = 'network' ;
final_workflow = 'network' ;

% Settings:

% PSF_fudge_factor = 2 ;
PSF_fudge_factor = 1 ;

% % volume octaves (doubling of spherical volume)
scales_per_octave = 3 ;
% scales_per_octave = 1 / 6 ;
% scales_per_octave = 1 / 3 ; % 1 per radius octave
% scales_per_octave = 2 / 3 ; % 2 per radius octave
% scales_per_octave = 1 ; % 3 per radius octave

for stackID = stackID_range
    
    switch start_workflow
    
        case 'energy'
    
            name_value_pair_inputs = {  'OutputDirectory',                   OutputDirectory, ...
                                        'PreviousBatch',                    'none',               ...
                                        'PreviousWorkflow',                 'none',            ...
                                        'StartWorkflow',                    'energy',                           ...
                                       'FinalWorkflow',                    final_workflow,                              ...
                                   ...     'FinalWorkflow',                    'energy',                              ...                    
                                        'Visual',                           'productive',                       ...
                                        'SpecialOutput', { 'histograms', 'vmv', 'depth', 'strands', 'directions' },        ...                                        
                                        'NewBatch',                         'yes',                    ...
                                        'Presumptive',                       true,                              ...
                                        'matching_kernel_string',            '3D gaussian conv annular pulse',            ... % !!!! depricated parameter !!!! built-in parmater to energy_filter, A = 6 !!!!! make this a recorded input
                 ...                       'symmetry_ratio_factor',                    1.5,         ... !!! depricated parameter.  
...                                        'gaussian_to_ideal_ratio',               0.6,         ...
...                                        'gaussian_to_ideal_ratio',               2^-(scales_per_octave*3/2),         ... % half the radius is due to blurring when the radius is sampled at every doubling
                                        ...'gaussian_to_ideal_ratio',               ( 1 - 2 ^ - ( 2 / scales_per_octave / 3 )) .^ 0.5 
    ...                                    'gaussian_to_ideal_ratio',               ( 1 - 2 ^ - ( 2 / scales_per_octave / 3 )) .^ 0.5,         ... % pythagorean half (root(2)/2) of the radius is due to blurring when the radius is sampled at every doubling
                                     'gaussian_to_ideal_ratio', 0.75 ^ 0.5, ...
                                     'spherical_to_annular_ratio',               0.5, ...
    ...                                    'gaussian_to_ideal_ratio',               0.5,         ...
    ...                                 'spherical_to_annular_ratio',               0.5, ...
...                                        'microns_per_voxel',                        [0.78, 0.78, 5],          ... 
                                        'microns_per_voxel',                        microns_per_voxel( stackID, : ),          ... 
                                       'radius_of_smallest_vessel_in_microns',      6,                         ...
                                        'radius_of_largest_vessel_in_microns',      24,                         ...
                                        'approximating_PSF',                        true,                       ...
                                        'scales_per_octave',                        scales_per_octave,                        ... 
                                        'max_voxels_per_node_energy',               1e6,                    ...
                                        'vessel_wall_thickness_in_microns',         0                       , ...
                                        ...
                                        'VertexCuration',                   'manual' };

            time_stamp = vectorize_V200([ OutputDirectory, input_names{ stackID }], name_value_pair_inputs{ 1, : }); 

        
        otherwise

            name_value_pair_inputs = {  'OutputDirectory',                   OutputDirectory,  ...
                                        'PreviousBatch',                    'prompt',   ...
                      ...                  'PreviousBatch',                    'recent',   ...
                     ...                   'PreviousBatch',                    '210810-022653', ...
                    ...                    'PreviousBatch',                    '220126-010215', ...
                                        'PreviousWorkflow',                 'recent',          ...
                                        'StartWorkflow',                    start_workflow,    ...
                                   ...     'FinalWorkflow',                    'network',         ...
    ...                                    'Visual',                           'productive',      ...
                     ...                   'Visual',                           'vertices',      ...
                                        'NewBatch',                         'no',              ...
                                        'Presumptive',                       true,             ...
                                        'VertexCuration',                   'manual',          ...
                               ...         'VertexCuration',                   'machine-manual',          ...
                            ...            'VertexCuration',                   'none',          ...
                           ...             'VertexCuration',                   'mutual edges',          ...
                           ...          'VertexCuration',                   'auto',          ...
                           'length_dilation_ratio', 2, ...
                                        'space_strel_apothem_edges',        int64(1),           ...
                                        'number_of_edges_per_vertex',       2,               ... 
                            ...            'number_of_edges_per_vertex',       4,               ...
                                        'sigma_edge_smoothing',             0.5,               ...
                              ...          'EdgeCuration',                     'manual', ...
                           ...             'EdgeCuration',                     'none', ...
    ...                                    'SpecialOutput', { 'depth', 'strands', 'directions', 'upsampled', '3D-strands' }};
    ...                                    'SpecialOutput', { '3D-strands' }};
...                                        'SpecialOutput', { 'depth-stats' }};
              ...                           'is_combining_strands', false,'SpecialOutput', { 'upsampled' }};    
   ...                                      'SpecialOutput', { 'depth', 'directions' }};
        ...                                 'SpecialOutput', { 'depth-stats' }};
  ...                                     'is_combining_strands', false,'SpecialOutput', { 'histograms', 'vmv', 'depth', 'strands', 'directions' }};    
    ...                                   'is_combining_strands', false,'SpecialOutput', { 'histograms', 'vmv', 'depth', 'directions', '3D-directions' }};   
   ...                                    'is_combining_strands', false,'SpecialOutput', { 'histograms', 'vmv', '3D-directions' }};   
                 ...                     'is_combining_strands', false,'SpecialOutput', { 'histograms', 'vmv', '3D-directions', 'directions' }};   
...                                      'is_combining_strands', true,'SpecialOutput', { 'histograms', 'vmv', '3D-radii' }};               
        ...                              'is_combining_strands', false,'SpecialOutput', { 'histograms', 'vmv', '3D-radii' }};               
            ...                                          'is_combining_strands', true, 'SpecialOutput', { 'histograms', 'flow-field' }};
                                        'SpecialOutput', {'histograms'}};
      ...                                  'SpecialOutput', {'vmv'}};
           ...                               'SpecialOutput', { 'vmv', 'directions' }};
            time_stamp = vectorize_V200( name_value_pair_inputs{ 1, : }); 
    end            
end
